@model Model.EF.Product

@{
    ViewBag.Title = "Sửa sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_Layouts.cshtml";
    Model.EF.InventoryDbContext db = new Model.EF.InventoryDbContext();
}

@section header{
    Sửa sản phẩm
}
@using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="col-lg-6">
                                Nhập thông tin sản phẩm
                            </div>
                            <div class="col-lg-6 text-right">

                                <button class="btn btn-success" type="submit"><i class="bi bi-save"></i> Lưu[Sửa]</button>
                                <a href="@Url.Action("Index", "Product")" class="btn btn-info"><i class="fa fa-backward"></i> Quay lại</a>

                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-lg-12">

                            @Html.AntiForgeryToken()

                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group">
                                @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <select class="form-control" name="CategoryID">
                                        @{
                                            var productCategory = db.ProductCategories.FirstOrDefault(c => c.ID == Model.CategoryID);
                                        }
                                        @if (productCategory != null)
                                        {
                                            <option value="@productCategory.ID">@productCategory.Name</option>
                                        }
                                        @foreach (var cate in db.ProductCategories.Where(c => c.ID != Model.CategoryID).ToList())
                                        {
                                            <option value="@cate.ID">@cate.Name</option>
                                        }
                                    </select>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Material, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Material, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Material, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Sale, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Sale, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Sale, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Detail, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Detail, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <img id="imagePreview" src="@Url.Content(Model.Image)" alt="Xem trước hình ảnh" style="max-width: 100px; max-height: 100px;" />
                                    <input type="text" id="imageFileName" name="imageFileName" readonly="readonly" class="form-control" value="@Model.Image" />
                                    <input type="file" name="fileImage" id="fileImage" onchange="updateFileName(this)" />

                                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script>
    function updateFileName(input) {
        var fileName = input.files[0].name;
        document.getElementById("imageFileName").value = fileName;

        // Hiển thị xem trước hình ảnh
        var reader = new FileReader();
        reader.onload = function (e) {
            document.getElementById("imagePreview").src = e.target.result;
        };
        reader.readAsDataURL(input.files[0]);
    }
</script>










