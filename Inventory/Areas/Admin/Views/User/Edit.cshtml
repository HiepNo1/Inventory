@model Model.EF.User

@{
    ViewBag.Title = "Cập nhật người dùng";
    Layout = "~/Areas/Admin/Views/Shared/_Layouts.cshtml";
    var db = new Model.EF.InventoryDbContext();
}

@section header{
    Cập nhật người dùng
}
@using (Html.BeginForm())
{
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="col-lg-6">
                                Nhập Thông tin người dùng
                            </div>
                            <div class="col-lg-6 text-right">

                                <button class="btn btn-success" type="submit"><i class="bi bi-save"></i> Lưu[Thêm]</button>
                                <a href="@Url.Action("Index", "User")" class="btn btn-info"><i class="fa fa-backward"></i> Quay lại</a>

                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-lg-8">

                            @Html.AntiForgeryToken()

                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.GroupID, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <select class="form-control" name="GroupID">
                                        @{
                                            var group = db.UserGroups.FirstOrDefault(c => c.ID == Model.GroupID);
                                        }
                                        @if (group != null)
                                        {
                                            <option value="@group.ID">@group.Name</option>
                                        }
                                        @foreach (var userGroup in db.UserGroups.Where(c => c.ID != Model.GroupID).ToList())
                                        {
                                            <option value="@userGroup.ID">@userGroup.Name</option>
                                        }
                                        
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}









